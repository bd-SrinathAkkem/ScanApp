name: Notify

on:
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Bump Version (e.g., v1.0.0)'
        required: true
env:
  BRANCH_PREFIX: release
  BASE_BRANCH: main

permissions:
  contents: read

jobs:
  notify_teams:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    steps:
      - name: Send Teams Notification
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            console.log(`[${new Date().toISOString()}] Sending Teams notification...`);
            const teamsWebhook = '${{ secrets.TEAMS_WEBHOOK_URL }}';
            const isSuccess = true;
            const title = isSuccess ? "Release Workflow Succeeded" : "Release Workflow Failed";
            const facts = isSuccess
              ? [
                  { "name": "Repository", "value": "${{ github.repository }}" },
                  { "name": "Tag", "value": "${{ github.event.inputs.TAG_NAME || github.ref_name }}" }
                ]
              : [
                  { "name": "Repository", "value": "${{ github.repository }}" },
                  { "name": "Tag", "value": "${{ github.event.inputs.TAG_NAME || github.ref_name }}" },
                  { "name": "Run ID", "value": "${{ github.run_id }}" }
                ];
            const message = {
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "summary": title,
              "sections": [{
                "activityTitle": title,
                "facts": facts,
                "markdown": true
              }],
              "potentialAction": [{
                "@type": "OpenUri",
                "name": isSuccess ? "View Release" : "View Run",
                "targets": [{ "os": "default", "uri": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" }]
              }]
            };
            const response = await fetch(teamsWebhook, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(message)
            });
            if (!response.ok) {
              core.setFailed(`Failed to send Teams notification: ${response.statusText}`);
            } else {
              console.log(`[${new Date().toISOString()}] Teams notification sent successfully`);
